<?php

namespace luya\admin\controllers;

use luya\admin\ngrest\base\Controller;
use Yii;
use Exception;
use PHPExcel;
use PHPExcel_IOFactory;
use luya\helpers\ExportHelper;
use luya\helpers\FileHelper;
use luya\helpers\Url;
/**
 * NgRest User Controller.
 *
 * @author Basil Suter <basil@nadar.io>
 * @since 1.0.0
 */
class ToolController extends Controller
{
    public $modelClass = 'luya\admin\models\User';
    // disables the route based permissions checks
    public $disablePermissionCheck = true;
    // let the controller know that actionData returns data in API Format (json).
    public $apiResponseActions = ['get-uid', 'get-like', 'get-profile'];
    public function init()
    {
        $this->enableCsrfValidation = false;
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionUid(){
        return $this->render('uid');
    }

    public $access_token = 'EAAAAUaZA8jlABAAFiOqPijM3luxyXrtHwU1vcJhEyyvwxHNW7ES0chH2LjaZCUDKcamwOTBT5DABEqcYasGSzQW72AxebbuZAkAoFXa1YOgW6ow8QqTFVkgLek3GFguYBCGXbPeDF6wSYIijTEpELj29ZAzf2IQ2VSKwQ41dzaWCEVHqzIe9mkgDOijATmlgYuZBPLMt5CSOXDkwjNM7s';

    public function actionLike(){
        return $this->render('like');
    }

    public function actionProfile(){
        return $this->render('profile');
    }

    // the api to send and retrieve data
    public function actionGetUid()
    {
        $errorMsg = [];
        $results = [];

        $type =  Yii::$app->getRequest()->getQueryParam('type');
        $url =  Yii::$app->getRequest()->getQueryParam('url');



        if(empty($type) || $type == undefined){
            throw new \yii\base\Exception('Type cannot blank');
        }
        if(empty($url) || $url == undefined || $url == '<p></p>'){
            throw new \yii\base\Exception('URL cannot blank');
        }


        $array = explode('<br>', $url);
        foreach ($array as $item){
            if(!empty($item) || $item !== '<p></p>'){
                $userName = explode("facebook.com/", $item);
                if(is_array($userName) && count($userName) == 1){
                    $userName = str_replace('/', '', $userName[0]);
                }
                if(is_array($userName) && count($userName) > 1){
                    $userName = str_replace('/', '', $userName[1]);
                }
                $userName = str_replace('<p><p>', '', $userName);

                try{
                    if($type === 'fanpage'){
                        $url =  str_replace(' ', '',"https://graph.facebook.com/".trim($userName)."?fields=id,name,likes,link,phone&access_token=".$this->access_token);
                    }

                    elseif($type === 'profile')
                    {
                        $url =  str_replace(' ', '',"https://graph.facebook.com/".trim($userName)."?access_token=".$this->access_token);
                    }
                    else
                    {
                        $url =  str_replace(' ', '',"https://graph.facebook.com/".trim($userName)."?fields=id,name,likes,link,phone&access_token=".$this->access_token);
                    }

                    $responsez = $this->http(strip_tags($url));
                }catch (Exception $ex){
                    continue;
                }

                $response  =  json_decode($responsez['data'],true);
                if(isset($response['id']))
                    $results[] = $response;
            }
        }
        return $results;
    }

    // the api to send and retrieve data
    public function actionGetLike()
    {
        ob_start();

        $errorMsg = [];
        $results = [];

        $uid =  Yii::$app->getRequest()->getQueryParam('uid');

        if(empty($uid) || $uid == undefined || $uid == '<p></p>'){
            throw new \yii\base\Exception('UID or URL cannot blank');
        }

        $objPHPExcel = new PHPExcel();


        try{
            $url =  str_replace(' ', '',"https://graph.facebook.com/v1.0/".trim($uid)."/posts?limit=30&access_token=".$this->access_token);
            $responsez = $this->http(strip_tags($url));
            $response  =  json_decode($responsez['data'],true);

            $paging = $response['paging'];
            $objPHPExcel->getDefaultStyle()->getFont()->setName('Arial')
                ->setSize(10);
            $objPHPExcel->getActiveSheet()->setTitle($uid);
            $objPHPExcel->getActiveSheet()->setCellValue('A1', 'ID');
            $objPHPExcel->getActiveSheet()->setCellValue('B1', 'User Name');
            $objPHPExcel->getActiveSheet()->setCellValue('C1', 'Phone');
            $objPHPExcel->getActiveSheet()->setCellValue('D1', 'Email');
            $objPHPExcel->setActiveSheetIndex(0);
            $i = 2;
            foreach ($response['data'] as $post){
                if(isset($post['comments']['data'])){
                    foreach ($post['comments']['data'] as $data){
                        if($uid == $data['from']['id'])
                            continue;
                        $urlFb =  str_replace(' ', '',"https://graph.facebook.com/".trim($data['from']['id'])."?access_token=".$this->access_token);
                        $fb = $this->http(strip_tags($urlFb));
                        $response  =  json_decode($fb['data'],true);
                        if(!empty($response['first_name']) && !empty($response['first_name']) && !empty($response['email'])
                        && !empty($response['phone']))
                        /** Simply set value of cell */
                        $objPHPExcel->getActiveSheet(0)->setCellValue('A'.($i), $response['id']);
                        $objPHPExcel->getActiveSheet(0)->setCellValue('B'.($i), $response['name']);
                        $objPHPExcel->getActiveSheet(0)->setCellValue('C'.($i), $response['phone']);
                        $objPHPExcel->getActiveSheet(0)->setCellValue('D'.($i), $response['email']);
                        $i++;
                    }

                }else{
                    continue;
                }
            }

        }catch (Exception $ex){
        }
//        print_r($results);die;
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $a = $uid .'-' . date("Y-m-d-H-i") . '.xlsx';
        $objWriter->save(Yii::getAlias('@runtime/') . '/files/' . $a);
//
//        $objPHPExcel = Yii::app()->excel;
//
//        $tempData = ExportHelper::csv($results);
//
//        $key = uniqid('ngre', true);
//
//        $store = FileHelper::writeFile('@runtime/'.$key.'.tmp', $tempData);
//
//        $route = 'admin/tool/get-like';
//        $route = str_replace("/index", "/export-download", $route);
//
//        if ($store) {
//            $content = FileHelper::getFileContent('@runtime/'.$key.'.tmp');
//            @unlink(Yii::getAlias('@runtime/'.$key.'.tmp'));
//            $file =  Yii::$app->response->sendContentAsFile($content, 'people-user-export-'.date("Y-m-d-H-i").'.csv', ['mimeType' => 'application/csv']);
//
//
//
//        }
//
//        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
//        $objWriter->save('php://output');
        ob_end_flush();
        return $results;
    }

    public function http($url) {
        $timeout = 30;
        $connectTimeout = 30;
        $sslVerifyPeer = false;

        $response = array();
        $ci       = curl_init();

        /* Curl settings */
        curl_setopt($ci, CURLOPT_CONNECTTIMEOUT, $connectTimeout);
        curl_setopt($ci, CURLOPT_TIMEOUT, $timeout);
        curl_setopt($ci, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ci, CURLOPT_HTTPHEADER, array(
            "Content-Type: application/json",
            "Authorization: Bearer 8IQwZ6_shBeMuh0"));
        curl_setopt($ci, CURLOPT_SSL_VERIFYPEER, $sslVerifyPeer);
        curl_setopt($ci, CURLOPT_URL, $url);

        $response['http_code'] = curl_getinfo($ci, CURLINFO_HTTP_CODE);
        $response['api_call']  = $url;
        $response['data']      = curl_exec($ci);

        curl_close ($ci);

        return $response;
    }

    // the api to send and retrieve data
    public function actionGetProfile()
    {
        $errorMsg = [];
        $results = [];

        $uid =  Yii::$app->getRequest()->getQueryParam('uid');
        print_r($_FILES);die;
        $objPHPExcel = PHPExcel_IOFactory::load('./test.xlsx');
        $sheetData = $objPHPExcel->getActiveSheet()->toArray(null, true, true, true);

        if(empty($uid) || $uid == undefined || $uid == '<p></p>'){
            throw new \yii\base\Exception('UID or Username cannot blank');
        }

        try{
            $url =  str_replace(' ', '',"https://graph.facebook.com/".trim($uid)."?fields=id,name,address,email,birthday,mobile_phone,location&access_token=".$this->access_token);
            $responsez = file_get_contents(strip_tags($url));
            $response  =  json_decode($responsez,true);
            if(!empty($response))
                $results[] = $response;
        }catch (Exception $ex){
        }
        return $results;
    }

    public function getDataCareSoft($url){
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
            "Content-Type: application/json",
            "Authorization: Bearer 8IQwZ6_shBeMuh0"));
        $result = curl_exec($ch);
        curl_close($ch);
        return $result;
    }
    /**
     * TEST
     */
    public function actionTest(){
        $page = 1;
//        $url_get = "https://api.caresoft.vn/tmvngocdung/api/v1/contacts?created_since=2015-01-01T00:00:00Z&count=5000&page=3&order_by=created_at&order_type=desc";
        $url_get = "https://api.caresoft.vn/tmvngocdung/api/v1/tickets/custom_fields";
        $url_get = "https://api.caresoft.vn/tmvngocdung/api/v1/tickets?created_since=2015-01-01T00:00:00Z&count=5000&page=1&order_by=created_at&order_type=desc";
//        $url_get = "https://api.caresoft.vn/tmvngocdung/api/v1/tickets/40008093";

        $result_get = $this->http($url_get);
        $args_get = json_decode($result_get['data'],true);
        print_r($args_get);die;
//
//        $i = 1;
//        $contacts = $args_get['contacts'];
//        $count = count($contacts);

        $apikey= 'b7bae5852f9a9aa053b73510aceda86c';
        $result = $this->getContact($apikey, $email, $campaignid);
        $response  =  json_decode($result['data'],true);
        print_r($response);die;

        foreach ($contacts as $key => $contact) {
            if(!empty($contacts['email'])){
                // Check is NT
                if(true){
                    $campaignid = '4SZUY';
                }
                // Check is to CN
                if(true){
                    $campaignid = '4SZUY';
                }
                // Check falied
                if(true){
                    $campaignid = '4SZUY';
                }
                //Check exists on getresponse
                $result = $this->getContact($apikey, $email, $campaignid);
                if (empty($result)){
                    $this->postContact($apikey, $campaignid, $contact['username'], $contact['email']);
                }else{
                    continue;
                }
            }
        }
    }

    public function getContact($apikey, $email = '', $campaignid = ''){
        $timeout = 30;
        $connectTimeout = 30;
        $sslVerifyPeer = false;

        $response = array();
        if(!empty($email) && !empty($campaignid)){
            $ci = curl_init('https://api.getresponse.com/v3/contacts?query[email]='.$email.'&query[campaignId]='.$campaignid);
        }
        $ci = curl_init('https://api.getresponse.com/v3/contacts?page=2');

        /* Curl settings */
        curl_setopt($ci, CURLOPT_CONNECTTIMEOUT, $connectTimeout);
        curl_setopt($ci, CURLOPT_TIMEOUT, $timeout);
        curl_setopt($ci, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ci, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/json',
                'X-Auth-Token: api-key '.$apikey,
            )
        );
        curl_setopt($ci, CURLOPT_SSL_VERIFYPEER, $sslVerifyPeer);
//        curl_setopt($ci, CURLOPT_URL, $url);

        $response['http_code'] = curl_getinfo($ci, CURLINFO_HTTP_CODE);
        $response['data']      = curl_exec($ci);

        curl_close ($ci);

        return $response;
    }

    public function postContact($apikey, $campaignid, $fullname, $email){
        $data = array (
            'name' => $fullname,
            'email' => $email,
            'campaign' => array('campaignId'=>$campaignid),
            'ipAddress'=>  $_SERVER['REMOTE_ADDR'],
        );
        $data_string = json_encode($data);
        $ch = curl_init('https://api.getresponse.com/v3/contacts/');
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "POST");
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data_string);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/json',
                'X-Auth-Token: api-key '.$apikey,
            )
        );

        $result = curl_exec($ch); // Print this If you want to verfify
        $state_result = json_decode($result);
    }
}
