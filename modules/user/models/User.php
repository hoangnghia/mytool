<?php

namespace app\modules\user\models;


use luya\admin\ngrest\base\NgRestModel;
use luya\admin\Module;
use Yii;
use yii\db\Expression;

/**
 * User.
 * 
 * File has been created with `crud/create` command. 
 *
 * @property integer $id
 * @property string $username
 * @property string $firstname
 * @property string $lastname
 * @property string $phone
 * @property string $email
 * @property string $created_at
 * @property string $updated_at
 * @property integer $source
 * @property boolean $status
 * @property boolean $custom_value
 * @property boolean $facebook
 */
class User extends NgRestModel
{

    /**
     * @inheritdoc
     */
    public function init()
    {
        parent::init();
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
    public static function ngRestApiEndpoint()
    {
        return 'api-user-user';
    }


    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Module::t('ID'),
            'username' => Module::t('model_user_name'),
            'firstname' => Module::t('mode_user_firstname'),
            'lastname' => Module::t('mode_user_lastname'),
            'email' => Module::t('mode_user_email'),
            'phone' => Module::t('mode_user_phone'),
            'created_at' => Module::t('mode_created_at'),
            'updated_at' => Module::t('mode_updated_at'),
            'source' => Module::t('mode_source'),
            'status' => Module::t('mode_status'),
        ];
    }


    public function beforeSave($insert)
    {
//        if($this->isNewRecord){
//            $this->created_at = new Expression('NOW()');
//        }
//        $this->updated_at = new Expression('NOW()');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function ngRestExtraAttributeTypes()
    {
        return [
            'created_at' => 'text',
            'updated_at' => 'text',
        ];
    }
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['created_at', 'updated_at'], 'safe'],
            [['source'], 'integer'],
            [['status'], 'boolean'],
            [['email'], 'unique', 'on' => ['restcreate', 'restupdate']],
            [['username', 'firstname', 'lastname', 'phone', 'email'], 'string', 'max' => 150],
        ];
    }

    /**
     * @inheritdoc
     */
    public function ngRestFilters()
    {
        return [
            'Đang hiện' => self::find()->where(['status' => true]),
            'Đang ẩn' => self::find()->where(['status' => false]),
        ];
    }
    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        return [
            'restcreate' => ['firstname','username','phone','status','source', 'lastname', 'email'],
            'restupdate' => ['firstname','username','phone','status','source', 'lastname', 'email'],
            'default' => ['firstname', 'lastname', 'email', 'settings'],
        ];
    }


    /**
     * @inheritdoc
     */
    public function genericSearchFields()
    {
        return ['username', 'phone', 'email', 'created_at', 'updated_at'];
    }

    /**
     * @inheritdoc
     */
    public function ngRestAttributeTypes()
    {
        return [
            'username' => 'text',
            'firstname' => 'text',
            'lastname' => 'text',
            'phone' => 'text',
            'email' => 'text',
            'source' => 'number',
            'status' => ['toggleStatus', 'initValue' => 0, 'interactive' => false],
        ];
    }

    /**
     * @inheritdoc
     */
    public function ngRestScopes()
    {
        return [
            ['list', ['username', 'phone', 'email', 'created_at']],
            [['create', 'update'], ['username','firstname', 'lastname', 'phone', 'email', 'status']],
            ['delete', true],
        ];
    }
}